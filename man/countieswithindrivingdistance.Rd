% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/countieswithindrivingdistance.R
\name{countieswithindrivingdistance}
\alias{countieswithindrivingdistance}
\title{Counties within Driving Distance}
\usage{
countieswithindrivingdistance(centerlocation, drivingtime = 90,
  considerationradius = drivingtime * 1.5, countymaps = NA,
  fipscodes = NA, output = c("all", "nearbydf", "mapdata", "hobsonslist",
  "map"))
}
\arguments{
\item{centerlocation}{a character string of a location acting as the center from which you want to measure}

\item{drivingtime}{numeric value of time, in minutes, that you want to drive}

\item{considerationradius}{numeric value of distance, in miles, that you want to consider. Limits the number of geocoded counties. Recommended to be much larger than drivingtime, perhaps 50% larger, to ensure that all counties are considered.}

\item{countymaps}{a spatialpolygonsdataframe. If NA, data is downloaded and read from the US Census via getcountymaps().}

\item{fipscodes}{a data frame of fips codes for all counties with bannerized codes added. If NA, data from the tigris package is modified to work}

\item{output}{a character vector describing what output you want. Available options include, "nearbydf", "mapdata", "hobsonslist" and "map"}
}
\value{
if more than one output is selected, a list containing values of each. If only one output is selected, the object itself is return, without being wrapped in a list. Outputs include:
\itemize{
 \item{"nearbydf"}{A data frame of nearby counties and their distance to centerlocation}
 \item{"mapdata"}{A SpaitalPolygonsDataFrame of the nearby counties appropriate for use in a leaflet map}
 \item{"hobsonslist"}{A character vector ready to paste into a Hobsons filter }
 \item{"map"}{A pre-generated leaflet map}
 }
}
\description{
generate a list of counties within a particular driving distance of a location
}
\details{
countieswithindrivingdistance() is not vectorized--you cannot pass in vector of centerlocations (or more usefully, a vector of centerlocations and a second vector of driving distances). Use lapply() for this.
}

